TOKENS        Lexemes

KEYWORD     = int
IDENTIFIER  = countEights
SEPARATOR   = (
KEYWORD     = int
IDENTIFIER  = num1$
SEPARATOR   = )
SEPARATOR   = {
KEYWORD     = if
SEPARATOR   = (
IDENTIFIER  = num1$
OPERATOR    = <
INTEGER     = 8
SEPARATOR   = )
IDENTIFIER  = return
INTEGER     = 0
KEYWORD     = endif
KEYWORD     = int
IDENTIFIER  = digit
OPERATOR    = =
IDENTIFIER  = num1$
OPERATOR    = %
INTEGER     = 10
SEPARATOR   = ;
IDENTIFIER  = num1$
OPERATOR    = =
IDENTIFIER  = num1$
OPERATOR    = /
INTEGER     = 10
SEPARATOR   = ;
KEYWORD     = if
SEPARATOR   = (
IDENTIFIER  = digit
OPERATOR    = <
INTEGER     = 8
KEYWORD     = or
IDENTIFIER  = digit
OPERATOR    = >
INTEGER     = 8
SEPARATOR   = )
SEPARATOR   = {
KEYWORD     = if
SEPARATOR   = (
IDENTIFIER  = num1$
OPERATOR    = %
INTEGER     = 10
OPERATOR    = =
OPERATOR    = =
INTEGER     = 8
SEPARATOR   = )
IDENTIFIER  = return
INTEGER     = 2
OPERATOR    = +
IDENTIFIER  = countEights
SEPARATOR   = (
IDENTIFIER  = num1$
SEPARATOR   = )
KEYWORD     = endif
KEYWORD     = else
IDENTIFIER  = return
INTEGER     = 1
OPERATOR    = +
IDENTIFIER  = countEights
SEPARATOR   = (
IDENTIFIER  = num1$
SEPARATOR   = )
KEYWORD     = endelse
SEPARATOR   = }
IDENTIFIER  = return
IDENTIFIER  = countEights
SEPARATOR   = (
IDENTIFIER  = num1$
SEPARATOR   = )
SEPARATOR   = ;
SEPARATOR   = }
KEYWORD     = int
IDENTIFIER  = main
SEPARATOR   = (
SEPARATOR   = )
SEPARATOR   = {
IDENTIFIER  = cout
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = countEights
SEPARATOR   = (
INTEGER     = 8
SEPARATOR   = )
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = endl
SEPARATOR   = ;
IDENTIFIER  = cout
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = countEights
SEPARATOR   = (
INTEGER     = 818
SEPARATOR   = )
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = endl
SEPARATOR   = ;
IDENTIFIER  = cout
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = countEights
SEPARATOR   = (
INTEGER     = 8818
SEPARATOR   = )
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = endl
SEPARATOR   = ;
SEPARATOR   = }
KEYWORD     = int
IDENTIFIER  = main
SEPARATOR   = (
SEPARATOR   = )
SEPARATOR   = {
KEYWORD     = float
IDENTIFIER  = rate
OPERATOR    = =
FLOAT       = 3.0
IDENTIFIER  = f
SEPARATOR   = ;
KEYWORD     = float
IDENTIFIER  = initial_balance
OPERATOR    = =
FLOAT       = 20000.0
IDENTIFIER  = f
SEPARATOR   = ;
IDENTIFIER  = double
OPERATOR    = =
IDENTIFIER  = initial_balance
SEPARATOR   = ;
KEYWORD     = int
IDENTIFIER  = year
OPERATOR    = =
INTEGER     = 0
SEPARATOR   = ;
KEYWORD     = while
SEPARATOR   = (
IDENTIFIER  = balance
OPERATOR    = <
INTEGER     = 2
OPERATOR    = *
IDENTIFIER  = initial_balance
SEPARATOR   = )
IDENTIFIER  = balance
OPERATOR    = =
IDENTIFIER  = balance
OPERATOR    = *
SEPARATOR   = (
FLOAT       = .25
SEPARATOR   = )
SEPARATOR   = ;
IDENTIFIER  = year
OPERATOR    = +
OPERATOR    = +
SEPARATOR   = ;
IDENTIFIER  = endwhile
IDENTIFIER  = std
SEPARATOR   = :
SEPARATOR   = :
IDENTIFIER  = cout
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = year
OPERATOR    = <
OPERATOR    = <
IDENTIFIER  = std
SEPARATOR   = :
SEPARATOR   = :
IDENTIFIER  = endl
SEPARATOR   = ;
IDENTIFIER  = return
INTEGER     = 0
SEPARATOR   = ;
SEPARATOR   = }
